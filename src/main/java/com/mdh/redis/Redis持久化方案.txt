(1) Rdb 方式
Redis 默认的方式，redis 通过快照方式将数据持久化到磁盘中。
(1.1) 设置持久化快照的条件
在 redis.conf 中修改持久化快照的条件：
save 900 1
save 300 10
save 60 10000
(1.2) 持久化文件的存储目录
在 redis.conf 中可以指定持久化文件的存储目录
dbfilename dump.rdb
dir ./
(1.3) Rdb的问题
一旦redis非法关闭，那么会丢失最后一次持久化之后的数据。
如果数据不重要，则不必要关心。 如果数据不能允许丢失，那么要使用 aof 方式。

RDB的执行原理：（linux系统 进程是不能直接操作物理内存，操作系统为进程分配一个虚拟内存，操作系统会维护一个虚拟内存与物理内存的映射关系表（页表：虚拟地址和物理地址的映射关系），）
   bgsave开始的时候，主进程 会 fork 一个子进程（拷贝主进程的页表数据，子进程与主进程的映射关系相同），子进程共享主进程的内存数据。完成fork后读取内存数据并写入新RDB文件。
        fork采用的是copy-on-write技术（java中CopyOnWriteArrayList， mysql中mvcc机制）
            1.当主进程执行读操作时，访问共享数据
            2.当主进程执行写操作时，则会拷贝一份数据，执行写操作




（2）Aof方式
Redis 默认是不使用该方式持久化的。Aof 方式的持久化，是操作一次 redis 数据库，则将操作的记录存储到 aof 持久化文件中。
·第一步：开启 aof 方式持久化方案。 将redis.conf中的appendonly改为yes，即开启aof方式的持久化方案。
  appendonly yes
·Aof文件存储的目录和rdb方式的一样。 Aof文件存储的名称
 appendfilename "appendloy.aof"
 在使用aof和rdb方式时，如果redis重启，则数据从aof文件加载。

 数据刷盘机制
    1.always（同步刷盘），可靠性高，几乎不丢失数据   性能影响大
    2.everysec（每秒同步刷盘），性能适中，   最多丢失1秒数据
    3.no（操作系统控制），性能最好，   可靠性最低，可能丢失大量数据