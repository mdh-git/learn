ArrayList 和 LinkedList 的区别:
Arraylist是使用数组来存储数据，特点：查询快、增删慢
Linkedlist是使用双向链表存储数据，特点：增删快、查询慢，但是查询链表两端的数据也很快。
Redis的list是采用来链表来存储的，所以对于redis的list数据类型的操作，是操作list的两端数据来操作的。

命令:

向列表两端增加元素
·向列表左边增加元素 语法：lpush key value [value…]
> lpush list:1 1 2 3
(integer) 3

·向列表右边增加元素 语法：rpush key value [value…]
> rpush list:1 4 5 6
(integer) 6

查看列表 LRANGE命令是列表类型最常用的命令之一，获取列表中的某一片段，将返回start、stop之间的所有元素（包含两端的元素），索引从0开始。
索引可以是负数，如：“-1”代表最后边的一个元素。
语法：lrange key start stop
> lrange list:1 0 2
1) "3"
2) "2"
3) "1"
> lrange list:1 0 -1
1) "3"
2) "2"
3) "1"
4) "4"
5) "5"
6) "6"


从列表两端弹出元素 LPOP命令从列表左边弹出一个元素，会分两步完成：
·第一步是将列表左边的元素从列表中移除
·第二步是返回被移除的元素值。
语法： lpop key rpop key
> lpop list:1
"3"
> rpop list:1
"6"

获取列表中元素的个数 语法：llen key
> llen list:1
(integer) 4

删除列表中指定的值 LREM命令会删除列表中前count个值为value的元素，返回实际删除的元素个数。
根据count值的不同，该命令的执行方式会有所不同：
·当count>0时， LREM会从列表左边开始删除。
·当count<0时， LREM会从列表后边开始删除。
·当count=0时， LREM删除所有值为value的元素。
语法：lrem key count value

获得/设置指定索引的元素值
·获得指定索引的元素值 语法：lindex key index
> lindex list:1 2
"4"
·设置指定索引的元素值 语法：lset key index value
> lset list:1 2 2
OK

只保留列表指定片段 指定范围和 lrange 一致 语法：ltrim key start stop
> lrange list:1 0 -1
1) "2"
2) "1"
3) "2"
4) "5"
> ltrim list:1 0 2
OK
> lrange list:1 0 -1
1) "2"
2) "1"
3) "2"

向列表中插入元素 该命令首先会在列表中从左到右查找值为pivot的元素，
然后根据第二个参数是BEFORE还是AFTER来决定将value插入到该元素的前面还是后面。
语法：linsert key before | after pivot value
> lrange list:1 0 -1
1) "2"
2) "1"
3) "2"
> linsert list:1 after 1 9
(integer) 4
> lrange list:1 0 -1
1) "2"
2) "1"
3) "9"
4) "2"

将元素从一个列表转移到另一个列表 语法：rpoplpush source destination
> lrange list:1 0 -1
1) "2"
2) "1"
3) "9"
4) "2"
> rpoplpush list:1 newlist
"2"
> lrange newlist 0 -1
1) "2"
> lrange list:1 0 -1
1) "2"
2) "1"
3) "9"